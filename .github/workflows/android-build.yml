name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # removed pip install flet-builder (no matching package on PyPI)

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git python3-dev libjpeg-dev zlib1g-dev python3-pip build-essential

      - name: Setup app directory
        run: |
          mkdir -p build_app
          cp -r * build_app/ || true
          cd build_app

      - name: Install Python packages
        working-directory: build_app
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install --only-binary :all: Pillow==10.0.0
          pip install -r requirements.txt

      - name: Accept Android licenses
        run: |
          yes | flutter doctor --android-licenses || true

      - name: Build APK
        working-directory: build_app
        run: |
          export ANDROID_HOME=/usr/local/lib/android/sdk
          flet build apk

      - name: List build artifacts
        run: |
          echo "Listing build directory..."
          find . -name "*.apk" -type f
        
      - name: List build output (debug)
        run: |
          echo "Listing build/ directory"
          ls -la build || true
          echo "Find any .apk files in workspace"
          find . -type f -name "*.apk" -print || true

      - name: Find APK path
        id: find-apk
        run: |
          APK_PATH=$(find . -type f -name "*.apk" -print -quit)
          echo "APK_PATH=$APK_PATH" >> $GITHUB_OUTPUT
          echo "Found APK at: $APK_PATH"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: ${{ steps.find-apk.outputs.APK_PATH }}
          compression-level: 0
          if-no-files-found: error